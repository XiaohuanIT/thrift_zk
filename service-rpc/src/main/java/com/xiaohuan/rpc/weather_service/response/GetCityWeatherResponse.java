/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.xiaohuan.rpc.weather_service.response;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2020-02-13")
public class GetCityWeatherResponse implements org.apache.thrift.TBase<GetCityWeatherResponse, GetCityWeatherResponse._Fields>, java.io.Serializable, Cloneable, Comparable<GetCityWeatherResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetCityWeatherResponse");

  private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.BOOL, (short)1);
  private static final org.apache.thrift.protocol.TField ERROR_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("error_message", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField WEATHER_FIELD_DESC = new org.apache.thrift.protocol.TField("weather", org.apache.thrift.protocol.TType.LIST, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetCityWeatherResponseStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetCityWeatherResponseTupleSchemeFactory();

  public boolean success; // required
  public java.lang.String error_message; // optional
  public java.util.List<com.xiaohuan.rpc.weather_service.entity.Weather> weather; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SUCCESS((short)1, "success"),
    ERROR_MESSAGE((short)2, "error_message"),
    WEATHER((short)3, "weather");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SUCCESS
          return SUCCESS;
        case 2: // ERROR_MESSAGE
          return ERROR_MESSAGE;
        case 3: // WEATHER
          return WEATHER;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SUCCESS_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ERROR_MESSAGE,_Fields.WEATHER};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.ERROR_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("error_message", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WEATHER, new org.apache.thrift.meta_data.FieldMetaData("weather", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.xiaohuan.rpc.weather_service.entity.Weather.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetCityWeatherResponse.class, metaDataMap);
  }

  public GetCityWeatherResponse() {
  }

  public GetCityWeatherResponse(
    boolean success)
  {
    this();
    this.success = success;
    setSuccessIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public GetCityWeatherResponse(GetCityWeatherResponse other) {
    __isset_bitfield = other.__isset_bitfield;
    this.success = other.success;
    if (other.isSetError_message()) {
      this.error_message = other.error_message;
    }
    if (other.isSetWeather()) {
      java.util.List<com.xiaohuan.rpc.weather_service.entity.Weather> __this__weather = new java.util.ArrayList<com.xiaohuan.rpc.weather_service.entity.Weather>(other.weather.size());
      for (com.xiaohuan.rpc.weather_service.entity.Weather other_element : other.weather) {
        __this__weather.add(new com.xiaohuan.rpc.weather_service.entity.Weather(other_element));
      }
      this.weather = __this__weather;
    }
  }

  public GetCityWeatherResponse deepCopy() {
    return new GetCityWeatherResponse(this);
  }

  @Override
  public void clear() {
    setSuccessIsSet(false);
    this.success = false;
    this.error_message = null;
    this.weather = null;
  }

  public boolean isSuccess() {
    return this.success;
  }

  public GetCityWeatherResponse setSuccess(boolean success) {
    this.success = success;
    setSuccessIsSet(true);
    return this;
  }

  public void unsetSuccess() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
  }

  /** Returns true if field success is set (has been assigned a value) and false otherwise */
  public boolean isSetSuccess() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
  }

  public void setSuccessIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
  }

  public java.lang.String getError_message() {
    return this.error_message;
  }

  public GetCityWeatherResponse setError_message(java.lang.String error_message) {
    this.error_message = error_message;
    return this;
  }

  public void unsetError_message() {
    this.error_message = null;
  }

  /** Returns true if field error_message is set (has been assigned a value) and false otherwise */
  public boolean isSetError_message() {
    return this.error_message != null;
  }

  public void setError_messageIsSet(boolean value) {
    if (!value) {
      this.error_message = null;
    }
  }

  public int getWeatherSize() {
    return (this.weather == null) ? 0 : this.weather.size();
  }

  public java.util.Iterator<com.xiaohuan.rpc.weather_service.entity.Weather> getWeatherIterator() {
    return (this.weather == null) ? null : this.weather.iterator();
  }

  public void addToWeather(com.xiaohuan.rpc.weather_service.entity.Weather elem) {
    if (this.weather == null) {
      this.weather = new java.util.ArrayList<com.xiaohuan.rpc.weather_service.entity.Weather>();
    }
    this.weather.add(elem);
  }

  public java.util.List<com.xiaohuan.rpc.weather_service.entity.Weather> getWeather() {
    return this.weather;
  }

  public GetCityWeatherResponse setWeather(java.util.List<com.xiaohuan.rpc.weather_service.entity.Weather> weather) {
    this.weather = weather;
    return this;
  }

  public void unsetWeather() {
    this.weather = null;
  }

  /** Returns true if field weather is set (has been assigned a value) and false otherwise */
  public boolean isSetWeather() {
    return this.weather != null;
  }

  public void setWeatherIsSet(boolean value) {
    if (!value) {
      this.weather = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case SUCCESS:
      if (value == null) {
        unsetSuccess();
      } else {
        setSuccess((java.lang.Boolean)value);
      }
      break;

    case ERROR_MESSAGE:
      if (value == null) {
        unsetError_message();
      } else {
        setError_message((java.lang.String)value);
      }
      break;

    case WEATHER:
      if (value == null) {
        unsetWeather();
      } else {
        setWeather((java.util.List<com.xiaohuan.rpc.weather_service.entity.Weather>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SUCCESS:
      return isSuccess();

    case ERROR_MESSAGE:
      return getError_message();

    case WEATHER:
      return getWeather();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SUCCESS:
      return isSetSuccess();
    case ERROR_MESSAGE:
      return isSetError_message();
    case WEATHER:
      return isSetWeather();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof GetCityWeatherResponse)
      return this.equals((GetCityWeatherResponse)that);
    return false;
  }

  public boolean equals(GetCityWeatherResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_success = true;
    boolean that_present_success = true;
    if (this_present_success || that_present_success) {
      if (!(this_present_success && that_present_success))
        return false;
      if (this.success != that.success)
        return false;
    }

    boolean this_present_error_message = true && this.isSetError_message();
    boolean that_present_error_message = true && that.isSetError_message();
    if (this_present_error_message || that_present_error_message) {
      if (!(this_present_error_message && that_present_error_message))
        return false;
      if (!this.error_message.equals(that.error_message))
        return false;
    }

    boolean this_present_weather = true && this.isSetWeather();
    boolean that_present_weather = true && that.isSetWeather();
    if (this_present_weather || that_present_weather) {
      if (!(this_present_weather && that_present_weather))
        return false;
      if (!this.weather.equals(that.weather))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((success) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetError_message()) ? 131071 : 524287);
    if (isSetError_message())
      hashCode = hashCode * 8191 + error_message.hashCode();

    hashCode = hashCode * 8191 + ((isSetWeather()) ? 131071 : 524287);
    if (isSetWeather())
      hashCode = hashCode * 8191 + weather.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(GetCityWeatherResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSuccess()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetError_message()).compareTo(other.isSetError_message());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetError_message()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.error_message, other.error_message);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWeather()).compareTo(other.isSetWeather());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWeather()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.weather, other.weather);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("GetCityWeatherResponse(");
    boolean first = true;

    sb.append("success:");
    sb.append(this.success);
    first = false;
    if (isSetError_message()) {
      if (!first) sb.append(", ");
      sb.append("error_message:");
      if (this.error_message == null) {
        sb.append("null");
      } else {
        sb.append(this.error_message);
      }
      first = false;
    }
    if (isSetWeather()) {
      if (!first) sb.append(", ");
      sb.append("weather:");
      if (this.weather == null) {
        sb.append("null");
      } else {
        sb.append(this.weather);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'success' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class GetCityWeatherResponseStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public GetCityWeatherResponseStandardScheme getScheme() {
      return new GetCityWeatherResponseStandardScheme();
    }
  }

  private static class GetCityWeatherResponseStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetCityWeatherResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, GetCityWeatherResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SUCCESS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.success = iprot.readBool();
              struct.setSuccessIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ERROR_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.error_message = iprot.readString();
              struct.setError_messageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // WEATHER
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.weather = new java.util.ArrayList<com.xiaohuan.rpc.weather_service.entity.Weather>(_list0.size);
                com.xiaohuan.rpc.weather_service.entity.Weather _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new com.xiaohuan.rpc.weather_service.entity.Weather();
                  _elem1.read(iprot);
                  struct.weather.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setWeatherIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetSuccess()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'success' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, GetCityWeatherResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
      oprot.writeBool(struct.success);
      oprot.writeFieldEnd();
      if (struct.error_message != null) {
        if (struct.isSetError_message()) {
          oprot.writeFieldBegin(ERROR_MESSAGE_FIELD_DESC);
          oprot.writeString(struct.error_message);
          oprot.writeFieldEnd();
        }
      }
      if (struct.weather != null) {
        if (struct.isSetWeather()) {
          oprot.writeFieldBegin(WEATHER_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.weather.size()));
            for (com.xiaohuan.rpc.weather_service.entity.Weather _iter3 : struct.weather)
            {
              _iter3.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class GetCityWeatherResponseTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public GetCityWeatherResponseTupleScheme getScheme() {
      return new GetCityWeatherResponseTupleScheme();
    }
  }

  private static class GetCityWeatherResponseTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetCityWeatherResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, GetCityWeatherResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeBool(struct.success);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetError_message()) {
        optionals.set(0);
      }
      if (struct.isSetWeather()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetError_message()) {
        oprot.writeString(struct.error_message);
      }
      if (struct.isSetWeather()) {
        {
          oprot.writeI32(struct.weather.size());
          for (com.xiaohuan.rpc.weather_service.entity.Weather _iter4 : struct.weather)
          {
            _iter4.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, GetCityWeatherResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.success = iprot.readBool();
      struct.setSuccessIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.error_message = iprot.readString();
        struct.setError_messageIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.weather = new java.util.ArrayList<com.xiaohuan.rpc.weather_service.entity.Weather>(_list5.size);
          com.xiaohuan.rpc.weather_service.entity.Weather _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = new com.xiaohuan.rpc.weather_service.entity.Weather();
            _elem6.read(iprot);
            struct.weather.add(_elem6);
          }
        }
        struct.setWeatherIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

